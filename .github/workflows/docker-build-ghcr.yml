name: Build and Push Docker Images to GHCR

on:
  workflow_dispatch:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-24.04

    steps:
    # Repository-Code auschecken
    - name: Checkout code
      uses: actions/checkout@v3

    # Set up QEMU für Multiarch
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2
      with:
        platforms: all

    # Set up Docker Buildx für Multiarch
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    # Log in to GitHub Container Registry
    - name: Log in to GHCR
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    # Baue das Docker-Image und extrahiere die Version
    - name: Build Docker Image
      id: build_image
      run: |
        docker build -t ghcr.io/${{ github.repository_owner }}/containerized-rtl_tcp:latest .
        version=$(docker run --rm ghcr.io/${{ github.repository_owner }}/containerized-rtl_tcp:latest cat /version.txt)
        echo "Image version: $version"
        echo "version=$version" >> $GITHUB_ENV

    # Pushe das Docker-Image mit Tag
    - name: Push Docker Image with Version Tag
      uses: docker/build-push-action@v4
      with:
        context: .
        push: true
        tags: |
          ghcr.io/${{ github.repository_owner }}/containerized-rtl_tcp:latest
          ghcr.io/${{ github.repository_owner }}/containerized-rtl_tcp:${{ env.version }}
        platforms: linux/amd64,linux/arm64,linux/arm/v7

    - name: Add Multiple Annotations to Multi-Arch Manifest
      run: |
        IMAGE_NAME=ghcr.io/${{ github.repository_owner }}/containerized-rtl_tcp
        VERSION=$(docker run --rm ghcr.io/${{ github.repository_owner }}/containerized-rtl_tcp:latest cat /version.txt)
        
        # Create a multi-arch-manifest
        docker manifest create containerized-rtl_tcp:$VERSION \
          containerized-rtl_tcp:linux/amd64 containerized-rtl_tcp:linux/arm64
        
        # Add multiple annotations
        docker manifest annotate containerized-rtl_tcp:$VERSION containerized-rtl_tcp:linux/amd64 --arch amd64 --os linux --variant x86_64 --annotation "rtl_tcp version ${{ env.version }}" --annotation "build_type=release"
        docker manifest annotate containerized-rtl_tcp:$VERSION containerized-rtl_tcp:linux/arm64 --arch arm64 --os linux --variant aarch64 --annotation "rtl_tcp version ${{ env.version }}" --annotation "build_type=release"
        docker manifest annotate containerized-rtl_tcp:$VERSION containerized-rtl_tcp:linux/arm/v7 --arch arm --os linux --variant v7 --annotation "rtl_tcp version ${{ env.version }}" --annotation "build_type=release"
        
        # 7. Push the manifest with annotations to GHCR
        docker manifest push containerized-rtl_tcp:$VERSION
